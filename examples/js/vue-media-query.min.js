!(function(e, t) {
  typeof exports === 'object' && typeof module !== 'undefined' ?
    (module.exports = t()) :
    typeof define === 'function' && define.amd ?
      define(t) :
      (e.vueMediaQuery = t())
}(this, function() {
  let e,
    t = function(e) {
      return e
        .replace(/[A-Z]/g, function(e) {
          return `-${e.toLowerCase()}`
        })
        .toLowerCase()
    },
    n = function(e) {
      let n = '',
        i = Object.keys(e)
      return (
        i.forEach(function(r, a) {
          let u = e[r]
          ;(function(e) {
            return (/[height|width]$/).test(e)
          }((r = t(r)))) &&
            typeof u === 'number' &&
            (u += 'px'),
          (n += !0 === u ? r : !1 === u ? `not ${r}` : `(${r}: ${u})`),
          a < i.length - 1 && (n += ' and ')
        }),
        n
      )
    },
    i = function(e) {
      let t = ''
      return typeof e === 'string' ?
        e :
        e instanceof Array ?
          (e.forEach(function(i, r) {
            (t += n(i)), r < e.length - 1 && (t += ', ')
          }),
            t) :
          n(e)
    },
    r = {
      xs: {maxWidth: '480px'},
      sm: {maxWidth: '768px'},
      md: {maxWidth: '992px'},
      lg: {maxWidth: '1200px'},
      xl: {maxWidth: '1600px'}
    },
    a = ((e = 'object'),
      function(t) {
        return Object.prototype.toString.call(t).toLowerCase() === `[object ${e}]`
      }),
    u =
      Object.assign ||
      function(e) {
        for (let t = 1; t < arguments.length; t++) {
          const n = arguments[t]
          for (const i in n) {
            Object.prototype.hasOwnProperty.call(n, i) && (e[i] = n[i])
          }
        }
        return e
      },
    o = {
      name: 'media-query',
      props: {
        value: {
          type: [Object, Boolean],
          default() {
            return {}
          }
        },
        query: {
          type: Object,
          default() {
            return r
          }
        }
      },
      data() {
        let e,
          t,
          n,
          r = this,
          o = Object.keys(this.query),
          s = {},
          c = {},
          d = a(this.value) ?
            this.value :
            ((e = {}),
              (t = '__default__'),
              (n = this.value),
              t in e ?
                Object.defineProperty(e, t, {
                  value: n,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0
                }) :
                (e[t] = n),
              e)
        return (
          o.every(function(e) {
            return a(r.query[e])
          }) ?
            o.forEach(function(e) {
              (s[e] = !1), (c[e] = i(r.query[e]))
            }) :
            ((s.__default__ = !1), (c.__default__ = i(this.query))),
          {matches: u({}, s, d), mediaQueries: c, medias: {}}
        )
      },
      mounted() {
        if (typeof window === 'undefined') {
          return !1
        }
        this.addMediaQueryListeners()
      },
      beforeDestroy() {
        this.removeMediaQueryListeners()
      },
      render() {
        if (this.$slots.default && this.$slots.default.length > 0) {
          return this.$slots.default[0]
        }
      },
      methods: {
        addMediaQueryListeners() {
          const e = this
          Object.keys(this.mediaQueries).forEach(function(t) {
            const n = e.mediaQueries[t]
            ;(e.medias[t] = window.matchMedia(n)),
            e.updateMatches(t, e.medias[t].matches),
            (e.medias[t].onchange = function(n) {
              return e.updateMatches(t, n.matches)
            })
          })
        },
        removeMediaQueryListeners() {
          const e = this
          Object.keys(this.mediaQueries).forEach(function(t) {
            e.medias[t].onchange = null
          })
        },
        updateMatches(e, t) {
          this.matches[e] !== t &&
            ((this.matches[e] = t),
              this.$emit('input', this.matches),
              this.$emit('on-change', this.matches))
        }
      }
    }
  return (
    typeof window !== 'undefined' &&
      window.Vue &&
      window.Vue.component(o.name, o),
    o
  )
}))
// # sourceMappingURL=index.umd.min.js.map
